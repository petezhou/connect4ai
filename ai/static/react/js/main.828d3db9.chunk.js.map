{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Square","props","value","className","onClick","onMouseOver","Board","state","squares","Array","fill","redIsNext","hovers","i","j","this","handleClick","handleHover","col","map","arr","slice","calculateWinner","hoversRow","setState","handleTrickle","board","row","setTimeout","bind","status","winner","renderHover","renderSquare","React","Component","r","c","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"js/main.828d3db9.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\nfunction Square(props) {\n    if (props.value === \"red\"){\n        return <button className=\"square redPiece\" onClick={props.onClick} onMouseOver={props.onMouseOver}> </button>;\n    } else if (props.value === \"yellow\") {\n        return <button className=\"square yellowPiece\" onClick={props.onClick} onMouseOver={props.onMouseOver}> </button>;\n    } else if (props.value === \"blue\") {\n        return <button className=\"square bluePiece\" onClick={props.onClick} onMouseOver={props.onMouseOver}> </button>;\n    }\n    else {\n        return <button className=\"square\" onClick={props.onClick} onMouseOver={props.onMouseOver}> </button>;\n    }\n}\n\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            squares: Array(6).fill(Array(7).fill(null)),\n            redIsNext: true,\n            hovers: Array(7).fill(\"blue\")\n        };\n    }\n\n    renderSquare(i, j) {\n        return <Square value={this.state.squares[i][j]} onClick={() => this.handleClick(j)} onMouseOver={() => this.handleHover(j)} />\n    }\n\n    handleClick(col) {\n        const squares = this.state.squares.map((arr) => arr.slice());\n        if (calculateWinner(squares)){ return; }\n        const hoversRow = Array(7).fill(\"blue\");\n        this.setState({ hovers: hoversRow });\n        this.handleTrickle(squares, 0, col)\n    }\n\n    handleTrickle(board, row, col) {\n        if (row < 6 && board[row][col] == null) {\n            if (row !== 0) {\n                board[row - 1][col] = null;\n            }\n            board[row][col] = this.state.redIsNext ? \"red\" : \"yellow\";\n            this.setState({\n                squares: board\n            });\n            setTimeout(this.handleTrickle.bind(this), 50, board, row + 1, col);\n        } else {\n            // after trickle is done, we need to update states\n            const hoversRow = Array(7).fill(\"blue\");\n            hoversRow[col] = this.state.redIsNext ? \"yellow\" : \"red\";\n            this.setState({\n                hovers: hoversRow,\n                redIsNext: !this.state.redIsNext\n            });\n\n            // best place for AI to go.\n        }\n    }\n\n    renderHover(col) {\n        return <Square value={this.state.hovers[col]} onClick={() => this.handleClick(col)} onMouseOver={() => this.handleHover(col)} />\n    }\n\n    handleHover(col) {\n        const hoversRow = Array(7).fill(\"blue\")\n        if (calculateWinner(this.state.squares)) {\n            this.setState({\n                hovers: hoversRow\n            });\n        } else {\n            hoversRow[col] = this.state.redIsNext ? \"red\" : \"yellow\";\n            this.setState({\n                hovers: hoversRow\n            });\n        }\n    }\n\n    render() {\n        const winner = calculateWinner(this.state.squares);\n        let status;\n        if (winner === \"red\") {\n            status = \"Player 1 wins!\"\n        } else if (winner === \"yellow\") {\n            status = \"Player 2 wins!\"\n        } else if (winner === \"draw\") {\n            status = \"It's a draw.\"\n        } else {\n            status = \"\"\n        }\n\n        return (\n            <div className=\"board\">\n                <div className=\"board-row\">\n                    {this.renderHover(0)}\n                    {this.renderHover(1)}\n                    {this.renderHover(2)}\n                    {this.renderHover(3)}\n                    {this.renderHover(4)}\n                    {this.renderHover(5)}\n                    {this.renderHover(6)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0, 0)}\n                    {this.renderSquare(0, 1)}\n                    {this.renderSquare(0, 2)}\n                    {this.renderSquare(0, 3)}\n                    {this.renderSquare(0, 4)}\n                    {this.renderSquare(0, 5)}\n                    {this.renderSquare(0, 6)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(1, 0)}\n                    {this.renderSquare(1, 1)}\n                    {this.renderSquare(1, 2)}\n                    {this.renderSquare(1, 3)}\n                    {this.renderSquare(1, 4)}\n                    {this.renderSquare(1, 5)}\n                    {this.renderSquare(1, 6)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(2, 0)}\n                    {this.renderSquare(2, 1)}\n                    {this.renderSquare(2, 2)}\n                    {this.renderSquare(2, 3)}\n                    {this.renderSquare(2, 4)}\n                    {this.renderSquare(2, 5)}\n                    {this.renderSquare(2, 6)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3, 0)}\n                    {this.renderSquare(3, 1)}\n                    {this.renderSquare(3, 2)}\n                    {this.renderSquare(3, 3)}\n                    {this.renderSquare(3, 4)}\n                    {this.renderSquare(3, 5)}\n                    {this.renderSquare(3, 6)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(4, 0)}\n                    {this.renderSquare(4, 1)}\n                    {this.renderSquare(4, 2)}\n                    {this.renderSquare(4, 3)}\n                    {this.renderSquare(4, 4)}\n                    {this.renderSquare(4, 5)}\n                    {this.renderSquare(4, 6)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(5, 0)}\n                    {this.renderSquare(5, 1)}\n                    {this.renderSquare(5, 2)}\n                    {this.renderSquare(5, 3)}\n                    {this.renderSquare(5, 4)}\n                    {this.renderSquare(5, 5)}\n                    {this.renderSquare(5, 6)}\n                </div>\n                <h3>{status}</h3>\n            </div>\n        );\n    }\n}\n\n\nfunction App() {\n    // who starts etc. handled here and passed as props to Board\n    return (\n        <div className=\"App\">\n            <h1>Connect 4</h1>\n            <Board/>\n        </div>\n    );\n}\n\n\nfunction calculateWinner(board) {\n    // check columns\n    for (let r = 3; r < 6; r++) {\n        for (let c = 0; c < 7; c++) {\n            if (board[r][c]) {\n                if (board[r][c] === board[r - 1][c] &&\n                    board[r][c] === board[r - 2][c] &&\n                    board[r][c] === board[r - 3][c]) {\n                    return board[r][c];\n                }\n            }\n        }\n    }\n    // check rows\n    for (let r = 0; r < 6; r++) {\n        for (let c = 0; c < 4; c++) {\n            if (board[r][c]) {\n                if (board[r][c] === board[r][c + 1] &&\n                    board[r][c] === board[r][c + 2] &&\n                    board[r][c] === board[r][c + 3]) {\n                    return board[r][c];\n                }\n            }\n        }\n    }\n    // diagonal right\n    for (let r = 3; r < 6; r++) {\n      for (let c = 0; c < 4; c++) {\n        if (board[r][c]) {\n          if (board[r][c] === board[r - 1][c + 1] &&\n              board[r][c] === board[r - 2][c + 2] &&\n              board[r][c] === board[r - 3][c + 3]) {\n            return board[r][c];\n          }\n        }\n      }\n    }\n    // diagonal left\n    for (let r = 3; r < 6; r++) {\n      for (let c = 3; c < 7; c++) {\n        if (board[r][c]) {\n          if (board[r][c] === board[r - 1][c - 1] &&\n              board[r][c] === board[r - 2][c - 2] &&\n              board[r][c] === board[r - 3][c - 3]) {\n            return board[r][c];\n          }\n        }\n      }\n    }\n    // draw\n    for (let r = 0; r < 6; r++) {\n        for (let c = 0; c < 7; c++) {\n            if (!board[r][c]){\n                return null;\n            }\n        }\n    }\n    return \"draw\";\n}\n\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}